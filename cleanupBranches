#!/usr/bin/env bash

#Default arguments
dry_run=true
excludes=()
pattern='hyzm/.*$'
repo_url=''

# Read arguments
while [[ "${1}" ]]; do
	if grep -E '^(ssh|https)://git.*\.git$' <<< "${1}"; then
		repo_url="${1}"
		echo "[INFO] Repository url set to ${1}"
		shift
	elif [[ "${1}" == '--no-dry' ]]; then
		dry_run=false
		echo "[WARNING] dry_run set to false!"
		shift
	elif [[ "${1}" == '--pattern' ]]; then
		shift
		pattern="${1}"
		echo "[INFO] Branches pattern set to: '${1}'"
		shift
	elif [[ "${1}" == '--excludes' ]]; then
		shift
		while grep -vE '(^(ssh|https)://git.*\.git$|^--|^$)' <<< "${1}" > /dev/null; do
			excludes+=("${1#"remotes/origin/"}")
			echo "[INFO] Adding exclude: ${1}"
			shift
		done
	else
		echo "[ERROR] Argument not recognised: ${1}"
		exit 1
	fi
done

# Checkout/validate repository
if [[ -n "${repo_url}" ]]; then
	git clone "${repo_url}"
	repo_dir=$(sed -E 's/.*\/([^\/]+).git$/\1/g' <<< "${repo_url}")
	pushd "${repo_dir}" || exit 1
else
	
	if ! git status > /dev/null 2>&1; then
		echo "[ERROR] Repo url not provided. Neither dir is a git repository!"
		exit 1
	fi
fi

# Determinante exclude regex
if [[ -n "${excludes[*]}" ]]; then
	exclude_regex="^($(IFS='|'; echo "${excludes[*]}"))$"
else
	exclude_regex='^$'
fi

for branch in $(git branch -a | grep "remotes/origin/${pattern}"); do
	branch=${branch#remotes/origin/}
	if grep -E "${exclude_regex}" <<< "${branch}"; then
		echo "[INFO] Branch ${branch} skipped as matching exclude regex"
	fi
	echo "[INFO] Removing branch ${branch}"
	if [[ "${dry_run}" == 'false' ]]; then
		git push origin --delete "${branch}"
	else
		echo "[WARNING] Dry run is set, skipping removal. To actually remove, use --no-dry flag"
	fi
done

if [[ -n "${repo_url}" ]]; then
	echo "[INFO] Cleaning up repository copy"
	popd
	rm -rf "${repo_dir}"
fi
